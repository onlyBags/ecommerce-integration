services:
  mysqldb:
    image: mysql:8.0.33
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      - MYSQL_ALLOW_PUBLIC_KEY_RETRIEVAL=true
      - MYSQL_ALLOW_EMPTY_PASSWORD=false
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - target: 3306
        published: ${MYSQL_PORT}
    volumes:
      - db:/var/lib/mysql
    networks:
      - ecommerce-network
  redis:
    image: redis/redis-stack-server
    restart: unless-stopped
    env_file:
      - ./.env
    ports:
      - target: 6379
        published: ${REDIS_PORT}
    command: redis-server --loglevel warning --requirepass ${REDIS_PASSWORD} --loadmodule /opt/redis-stack/lib/rejson.so --loadmodule /opt/redis-stack/lib/redisearch.so
    networks:
      - ecommerce-network
  python-service:
    build:
      context: .
      dockerfile: Dockerfile.py
    env_file:
      - .env
    volumes:
      - ./process-image:/usr/src/app
    ports:
      - '${PYTHON_PORT}:${PYTHON_PORT}'
    networks:
      - ecommerce-network
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: ['./wait-for-it.sh', 'mysqldb:3306', '--', 'npm', 'run', 'debug']
    depends_on:
      - mysqldb
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $PORT:$PORT
      - $WS_PORT:$WS_PORT
      - 9229:9229
    stdin_open: true
    tty: true
    volumes:
      - server_code:/usr/ecommerce-monorepo/packages/ecommerce-server
      - /usr/ecommerce-monorepo/node_modules
    networks:
      - ecommerce-network

volumes:
  db:
  server_code:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/packages/ecommerce-server
      o: bind

networks:
  ecommerce-network:
    driver: bridge
